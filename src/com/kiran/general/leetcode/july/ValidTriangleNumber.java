package com.kiran.general.leetcode.july;

import java.util.Arrays;

public class ValidTriangleNumber {
    /*public int triangleNumber(int[] nums) {
        int count = 0;
        if(nums.length >= 3) {
            for(int i = 0; i < nums.length - 2; i++) {
                if(nums[i] <= 0)
                    continue;
                for(int j = i + 1; j < nums.length - 1; j++) {
                    if(nums[j] <= 0)
                        continue;
                    for (int k = j + 1; k < nums.length; k ++) {
                        if(nums[k] <= 0)
                            continue;
                        if(nums[i] + nums[j] > nums[k])
                            if(nums[i] + nums[k] > nums[j])
                                if(nums[k] + nums[j] > nums[i])
                                    count += 1;
                    }
                }
            }
        }
        return count;
    }*/

    public int triangleNumber(int[] nums) {
        if(nums == null || nums.length < 3)
            return 0;
        Arrays.sort(nums);
        int count = 0;
        for(int i = nums.length - 1; i >= 2; i--) {
            int j = 0, k = i - 1;
            while(j < k) {
                if(nums[j] + nums[k] > nums[i]) {
                    count += k - j;
                    k--;
                } else
                    j++;
            }
        }
        return count;
    }

    public static void main(String[] args) {
        ValidTriangleNumber vtn = new ValidTriangleNumber();
        //int[] nums = {24,755,251,930,445,432,409,793,797,72,66,724,933,15,669,851,859,310,927,739,781,462,38,724,650,945,404,807,950,976,149,42,913,177,343,571,520,765,932,891,647,524,860,948,277,762,354,593,961,544,771,194,65,102,699,129,75,344,321,391,31,165,369,879,890,580,729,643,22,997,890,943,286,237,675,262,806,461,341,843,854,707,179,222,110,8,466,926,303,898,813,200,913,231,425,112,640,500,451,776,801,235,423,341,185,517,755,665,672,2,781,857,398,201,473,981,585,532,766,629,191,866,468,496,925,345,692,900,249,187,616,309,68,729,485,449,545,531,928,221,983,586,309,146,766,499,746,14,107,995,8,138,237,702,699,285,220,534,281,647,776,380,592,48,754,480,686,656,961,338,591,457,396,540,325,831,948,299,229,538,566,427,385,345,499,49,580,554,600,659,46,142,711,8,854,337,580,856,972,267,377,528,981,865,286,326,469,69,348,948,96,133,56,723,6,94,695,790,705,518,778,580,782,599,488,920,27,337,989,7,903,711,293,541,528,445,390,186,394,851,478,358,975,633,942,439,384,640,759,923,725,602,512,39,608,479,476,73,207,989,102,192,493,515,132,979,683,225,827,690,589,634,11,825,244,585,809,64,357,88,230,293,633,291,19,852,699,863,902,750,563,624,886,338,26,48,111,652,528,986,784,238,779,371,165,825,92,299,353,619,310,878,448,22,167,711,579,479,941,880,912,873,582,685,576,784,787,22,639,64,310,36,768,607,524,69,856,754,921,379,734,411,857,226,977,770,78,930,286,712,37,290,360,959,324,48,927,623,378,606,932,878,810,379,66,452,204,824,448,302,705,30,497,364,805,833,844,952,459,503,151,555,729,136,158,953,588,86,268,820,392,718,705,327,200,208,957,54,299,567,811,638,637,703,635,627,584,478,973,402,215,676,146,96,502,931,476,420,632,28,191,562,53,360,321,787,708,266,466,392,230,511,167,387,529,16,513,144,1,608,824,407,32,65,376,117,642,847,985,172,235,530,609,993,668,618,7,424,714,950,302,808,542,609,41,19,945,856,583,540,226,457,758,990,403,153,748,611,286,137,11,552,104,250,409,850,224,714,863,84,865,281,426,884,38,492,563,778,338,326,410,241,571,457,571,192,826,41,30,121,645,60,686,830,440,214,309,759,960,781,42,645,762,760,806,809,748,825,762,139,636,763,786,667,728,513,577,106,561,730,532,825,183,559,509,207,684,124,447,412,240,20,251,376,506,608,602,275,501,597,725,542,306,150,53,992,190,85,667,688,168,261,489,328,990,886,664,991,165,993,228,54,607,241,470,583,187,191,424,831,580,105,494,969,999,560,583,492,937,983,494,393,958,792,603,683,732,415,142,200,61,201,610,338,117,883,222,357,128,78,974,346,264,847,66,608,181,352,407,29,778,842,228,358,210,498,20,736,112,349,80,226,373,694,6,466,887,442,71,969,730,680,941,402,721,72,741,189,894,887,693,453,470,363,679,338,603,428,261,911,504,695,5,16,1,705,254,576,47,844,840,812,9,657,680,702,189,378,236,820,672,930,158,691,346,452,458,565,291,735,891,134,344,345,632,839,86,997,624,852,232,769,682,367,979,45,639,474,399,117,955,777,26,221,264,206,21,250,802,212,169,985,448,108,845,991,690,539,799,604,622,213,482,77,521,298,266,984,469,357,700,487,935,827,350,572,248,4,550,268,314,253,929,907,973,973,123,543,123,734,164,90,570,827,836,313,330,989,105,475,953,265,365,815,177,692,70,914,342,122,916,306,714,295,139,787,740,579,341,540,375,790,87,104,163,955,688,849,681,209,294,738,382,870,948,601,990,196,586,772,580,801,401,880,560,222,863,506,888,195,933,582,555,331,649,412,305,68,346,299,856,242,422,252,307,162,914,414,734,775,698,455,990,463,615,572,262,604,860,299,621,590,16,489,173,32,192,164,681,52,8,433,913,976,735,402,748,1000,527,593,585,552,522,168,9,609,615,328,813,824,21,373,800,645,576,12,51,623,523,480,785,954,701,941,934,310,118,66,172,163,869,407,164,790,690,864,376,125,294,629,796,644,93,758,316,718,44,218,835,58,142,522,653,267,141,2,360,755,698,315,789,55,671,819,634,684,86,848,937,837,32,677,418,679,336,592,556,320,827,616,577,948,262,506,339,445,388,894,236,599,719,268,60,985,558,177,848,664,838,404,323,649,780,127};
        int[] nums = {0,1,0};
        System.out.println("length:  " + nums.length);
        System.out.println("Number of triangles possible: " + vtn.triangleNumber(nums));
    }
}
